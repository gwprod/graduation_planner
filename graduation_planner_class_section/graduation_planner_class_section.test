<?php

/**
 * @file
 * Testing for graduation_planner_class_section.
 */

/**
 * GraduationPlannerClassSectionTestCase DrupalWebTestCase
 */
class GraduationPlannerClassSectionTestCase extends DrupalWebTestCase {

  /**
   * Specifications for Simpletest module.
   *
   * @return array
   *   Return an array of information for Simpletest.
   */
  public static function getInfo() {
    return array(
      'name' => 'Web tests graduation planner class section module',
      'description' => 'Tests for graduation planner class section module.',
      'group' => 'GraduationPlanner',
    );
  }

  /**
   * Setup function.
   */
  public function setUp() {
    parent::setUp(array('simpletest', 'graduation_planner_class'));
  }

  /**
   * Teardown function.
   */
  public function tearDown() {
    parent::tearDown();
  }

  /**
   * Create section test routine.
   */
  public function testCreateSection() {

    $account = $this->drupalCreateUser(
        array(
          'create class',
          'edit any class',
          'edit own class',
          'delete any class',
          'delete own class',
          'list classes',
          'view class',
        )
    );
    $this->drupalLogin($account);

    $this->drupalGet('class');
    $this->assertNoText(t('Access denied'));
    $this->assertLink('Class list');
    $this->drupalGet('class/list');
    $this->assertNoText(t('Access denied'));
    $this->assertLink('New class');
    $this->drupalGet('class/new');
    $this->assertNoText(t('Access denied'));
    $this->assertFieldByName('class_department');
    $this->assertFieldByName('class_number');
    $this->assertFieldByName('title');
    $this->assertFieldByName('description');
    $this->assertFieldByName('class_units');
    $this->assertFieldByName('class_required');
    $this->assertFieldByName('class_is_gen_ed');
    $this->assertFieldByName('field_quarters_available[und][0][fall_quarter]');
    $this->assertFieldByName('field_quarters_available[und][0][winter_quarter]');
    $this->assertFieldByName('field_quarters_available[und][0][spring_quarter]');
    $this->assertFieldByName('field_quarters_available[und][0][summer_quarter]');
    $class = array(
      'class_department' => 3,
      'class_number' => '110',
      'title' => 'Java 1',
      'description' => 'Java 1',
      'class_units' => '4',
      'class_required' => TRUE,
      'class_is_gen_ed' => FALSE,
      'field_quarters_available[und][0][fall_quarter]' => TRUE,
      'field_quarters_available[und][0][winter_quarter]' => TRUE,
      'field_quarters_available[und][0][spring_quarter]' => TRUE,
    );
    $this->drupalPost('class/new', $class, 'Create class');
    $this->assertText(t('You have successfully saved the class @class', array('@class' => 'CS 110: Java 1')));
    $this->assertText('CS 110: Java 1');
    $this->assertText('Units:');
    $this->drupalGet('class/list');
    $this->assertFieldByName('filters[search_term]');
    $search = array(
      'filters[search_term]' => 'CS 110',
    );
    $this->drupalPost('class/list', $search, 'Search');
    $this->assertLink('CS 110: Java 1');
    $this->clickLink('CS 110: Java 1');
    $this->assertLink('Sections');
    $this->clickLink('Sections');
    $this->assertLink('New section');
    $this->clickLink('New section');
    $this->assertNoText(t('Access denied'));
    $this->assertFieldByName('class_section');
    $this->assertFieldByName('quarters');
    $this->assertFieldByName('year');
    $this->assertFieldByName('permission_codes');
    $section = array(
      'class_section' => 001,
      'quarters' => 0,
      'year' => 2014,
      'permission_codes' => '',
    );
    $this->assertLink('Save class section');
    $this->clickLink('Save class section');
    $this->assertText('2014');
    $this->assertText('Fall quarter');
    $this->assertText('001');
  }

}
