<?php

/**
 * @file
 * Graduation Planner Department module.
 *
 */
/*
 * Add inc files.
 */
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'graduation_planner_department') . "/graduation_planner_department.users.inc";

/**
 * Gets the title of a GraduationPlannerDepartment entity.
 *
 * @param object $department
 *   The GraduationPlannerDepartment entity.
 *
 * @return string
 *   Return the name of the department.
 */
function graduation_planner_department_title($department) {
  return $department->long_name;
}

class GraduationPlannerDepartment extends Entity {

  //  Since title is the property we will define as the name of our course, this function merely returns that property.
  protected function defaultLabel() {
    return $this->title;
  }

  //  Identifier() returns the id key defined in graduation_planner_department_entity_info in the last section
  protected function defaultUri() {
    return array('path' => 'department/' . $this->identifier());
  }

}

class GraduationPlannerDepartmentController extends EntityAPIController {

  public function create(array $values = array()) {

    $values += array(
      //  The name of the course.
      'short_name' => '',
      'long_name' => '',
      //  The description of the course.
      'description' => '',
      //  When the course was created.  REQUEST_TIME is defined deep in the page-handling functionality as the unix timestamp of the request.
      'created' => REQUEST_TIME,
      //  When the course was last changed.
      'changed' => REQUEST_TIME,
      //  The bundle type.
      'type' => 'graduation_planner_department'
    );
    return parent::create($values);
  }

  public function buildContent($entity, $view_mode = 'full', $langcode = NULL, $content = array()) {
    //  Specific display settings.
    $display_info = field_extra_fields_get_display('graduation_planner_department', 'graduation_planner_department', $view_mode);

    $content['long_name'] = array(
      '#theme' => 'field',
      '#weight' => $display_info['long_name']['weight'],
      '#title' => t('Department Name'),
      '#access' => isset($display_info['long_name']['visible']) ? $display_info['long_name']['visible'] : 0,
      '#label_display' => 'above',
      '#view_mode' => $view_mode,
      '#language' => LANGUAGE_NONE,
      '#field_name' => 'field_fake_title',
      '#field_type' => 'text',
      '#entity_type' => 'graduation_planner_department',
      '#bundle' => $entity->type,
      '#items' => array(array('value' => graduation_planner_department_title($entity))),
      '#formatter' => 'text_default',
      0 => array('#markup' => check_plain(graduation_planner_department_title($entity)))
    );
    $content['description'] = array(
      '#theme' => 'field',
      '#weight' => $display_info['description']['weight'],
      '#title' => t('Department Description'),
      '#access' => isset($display_info['description']['visible']) ? $display_info['description']['visible'] : 0,
      '#label_display' => 'above',
      '#view_mode' => $view_mode,
      '#language' => LANGUAGE_NONE,
      '#field_name' => 'field_fake_description',
      '#field_type' => 'text',
      '#entity_type' => 'graduation_planner_department',
      '#bundle' => $entity->type,
      '#items' => array(array('value' => $entity->description)),
      '#formatter' => 'text_default',
      0 => array('#markup' => check_plain($entity->description))
    );

    return parent::buildContent($entity, $view_mode, $langcode, $content);
  }

}

function graduation_planner_department_entity_info() {
  // Entities array
  $entities = array();
  $entities['graduation_planner_department'] = array(
    'label' => t('Graduation Planner - Department'),
    'entity class' => 'GraduationPlannerDepartment',
    'controller class' => 'GraduationPlannerDepartmentController',
    'base table' => 'graduation_planner_department',
    'revision table' => 'graduation_planner_department_revision',
    'fieldable' => TRUE,
    'entity keys' => array(
      'id' => 'department_id',
      'bundle' => 'type',
      'revision' => 'revision_id'
    ),
    'bundle keys' => array(
      'bundle' => 'type',
    ),
    'bundles' => array(
      'graduation_planner_department' => array(
        'label' => t('Graduation Planner - Department'),
        'admin' => array(
          'path' => 'admin/structure/graduation_planner_department/manage',
          'access arguments' => array('administer graduation_planner_department entities'),
        ),
      ),
    ),
    'load hook' => 'graduation_planner_department_load',
    'view modes' => array(
      'full' => array(
        'label' => t('Default'),
        'custom settings' => FALSE,
      ),
      'list' => array(
        'label' => t('List Item'),
        'custom settings' => TRUE,
      ),
    ),
    'label callback' => 'entity_department_label',
    'uri callback' => 'graduation_planner_department_uri',
    'module' => 'graduation_planner_department',
    'access callback' => 'graduation_planner_department_access',
  );
  return $entities;
}

function graduation_planner_department_form($form, &$form_state, $department = null) {
  //  If there is a department then create department_id form
  if (isset($department)) {
    $form['department_id'] = array(
      '#type' => 'hidden',
      '#value' => $department->department_id
    );
  }
  //  If not then create a department.
  else {
    $department = entity_get_controller('graduation_planner_department')->create();
  }

  //  Short name of the department.
  $form['short_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Department Short Name'),
    '#description' => t('The short name of the department (CS for Computer Science, POSC for Political Science, etc)'),
    '#default_value' => isset($department->short_name) ? $department->short_name : '',
    '#required' => TRUE
  );

  //  Full department name.
  $form['long_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Department Long Name'),
    '#description' => t('The long name of the department (Computer Science, Political Science, Mathematics, etc)'),
    '#default_value' => isset($department->long_name) ? $department->long_name : '',
    '#required' => TRUE,
  );

  // Department description.
  $form['description'] = array(
    '#type' => 'textarea',
    '#title' => t('Department Description'),
    '#description' => t('The description of the department'),
    '#default_value' => isset($department->description) ? $department->description : '',
    '#required' => TRUE,
  );
  field_attach_form('graduation_planner_department', $department, $form, $form_state);
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => isset($department->department_id) ? t('Save') : t('Create Department')
  );
  return $form;
}

function graduation_planner_department_form_submit($form, &$form_state) {
  if (isset($form_state['values']['department_id'])) {
    $department = graduation_planner_department_load($form_state['values']['department_id']);
    foreach ($form_state['values'] as $property => $value) {
      $department->{$property} = $value;
    }
  }
  else {
    $department = entity_get_controller('graduation_planner_department')->create($form_state['values']);
  }
  $department->is_new_revision = TRUE;
  field_attach_submit('graduation_planner_department', $department, $form, $form_state);
  entity_save('graduation_planner_department', $department);

  $redirect_path = $department->uri();
  $form_state['redirect'] = $redirect_path['path'];
  return $form;
}

function graduation_planner_department_get_departments() {
  //  Select department_id from database.
  $result = db_query('select department_id from {graduation_planner_department}');
  // Return values by department_id keys.
  $department_ids = $result->fetchAllAssoc('department_id');
  //  Load multiple arrays by department_id.
  $departments = graduation_planner_department_load_multiple(array_keys($department_ids));
  $output = array();
  //  Loop through department_ids.
  foreach ($departments as $department) {
    $output[$department->department_id] = $department->long_name;
  }
  return $output;
}

function graduation_planner_department_uri($department) {
  return array('path' => 'department/' . $department->identifier());  // identifier() returns the id key defined in graduation_planner_department_entity_info in the last section
}

function graduation_planner_department_list_departments() {
  //  Select graduation_planner_depatment table in the database.
  $query = db_select('graduation_planner_department', 'gpd')->extend('PagerDefault');
  //  Query the department_id.
  $query->fields('gpd', array('department_id'));
  $result = $query->execute();
  // Return values by key department_id.
  $department_ids = $result->fetchAllAssoc('department_id');
  $departments = graduation_planner_department_load_multiple(array_keys($department_ids));

  $rows = array();
  //  Iterate through array.
  foreach ($departments as $department) {
    $uri = $department->uri();
    $rows[] = array(
      'data' => array(
        'department_name' => l($department->long_name, $uri['path']),
        'department_description' => $department->description
      )
    );
  }
  /*$content['create_department'] = array(
    '#theme' => 'link',
    '#text' => 'New Department',
    '#path' => 'department/new',
    '#weight' => -100,
    '#options' => array(
      'attributes' => array('class' => array('button'), 'id' => 'new-class'),
      'html' => FALSE,
    ),
    '#access' => user_access('create new department')
  );*/
  $content['department_list'] = array(
    '#theme' => 'table',
    '#rows' => $rows,
    '#empty' => t('No Departments'),
    '#header' => array(t('Department Name'), t('Department Description')),
  );
  $content['pager'] = array(
    '#theme' => 'pager'
  );
  return $content;
}

function graduation_planner_department_menu() {
  //  Departments link.
  $menu['department'] = array(
    'title' => 'Departments',
    'page callback' => 'graduation_planner_department_list_departments',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM
  );
  $menu['department/list'] = array(
    'title' => 'Department list',
    'page callback' => 'graduation_planner_department_list_departments',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM | MENU_DEFAULT_LOCAL_TASK
  );
  
  // Submenu item.
  $menu['department/%graduation_planner_department'] = array(
    'title' => t('Department'),
    'title callback' => 'graduation_planner_department_title',
    'title arguments' => array(1),
    'page callback' => 'graduation_planner_department_view',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM
  );

  // 'View' menu_default_local_task.
  $menu['department/%graduation_planner_department/view'] = array(
    'title' => t('Department'),
    'title callback' => 'graduation_planner_department_title',
    'title arguments' => array(1),
    'page callback' => 'graduation_planner_department_view',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -100
  );

  // 'Edit' menu_default_local_task.
  $menu['department/%graduation_planner_department/edit'] = array(
    'title' => t('Edit'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('graduation_planner_department_form', 1),
    'access callback' => 'graduation_planner_department_access',
    'access arguments' => array('edit own department', 1),
    'type' => MENU_LOCAL_TASK,
    'weight' => -99
  );
  // 'Delete' menu_local_task.
  $menu['department/%graduation_planner_department/delete'] = array(
    'title' => t('Delete'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('graduation_planner_department_delete_form', 1),
    'access callback' => 'graduation_planner_department_access',
    'access arguments' => array('delete own department', 1),
    'type' => MENU_LOCAL_TASK,
    'weight' => -98
  );
  //  'Students' menu_local_task.
  $menu['department/%graduation_planner_department/students'] = array(
    'title' => t('Students'),
    'page callback' => 'graduation_planner_department_user_get_students',
    'page arguments' => array(1),
    'access callback' => 'graduation_planner_department_access',
    'access arguments' => array('view students', 1),
    'type' => MENU_LOCAL_TASK
  );
  // 'Staff' menu_local_task.
  $menu['department/%graduation_planner_department/staff'] = array(
    'title' => t('Staff'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('graduation_planner_department_users_get_staff_form', 1),
    'access callback' => 'graduation_planner_department_access',
    'access arguments' => array('edit staff', 1),
    'type' => MENU_LOCAL_TASK
  );


  // 'New' link.
  $menu['department/new'] = array(
    'title' => t('New Department'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('graduation_planner_department_form'),
    'access arguments' => array('create department'),
    'type' => MENU_NORMAL_ITEM | MENU_LOCAL_TASK
  );
  return $menu;
}

function graduation_planner_department_delete_form($form, &$form_state, $department) {
  //  Delete confirmation message.
  drupal_set_message('Are you sure you want to delete this Department?  There may be other entities that depend on it.', 'warning');
  $form['department_name'] = array(
    '#type' => 'item',
    '#title' => t('Department'),
    '#markup' => $department->long_name
  );
  $form['department_id'] = array(
    '#type' => 'hidden',
    '#value' => $department->department_id
  );
  $form['delete'] = array(
    '#type' => 'submit',
    '#value' => t('Delete')
  );
  return $form;
}

function graduation_planner_department_delete_form_submit($form, &$form_state) {
  if (isset($form_state['values']['department_id'])) {
    $department = graduation_planner_department_load($form_state['values']['department_id']);
    entity_delete($department->type, $department->identifier());
  }
  $form_state['redirect'] = 'department';
}

function graduation_planner_department_delete($department) {
  entity_delete($department->type, $department->identifier());
  drupal_goto('department');
}

function graduation_planner_department_field_extra_fields() {
  $extra['graduation_planner_department']['graduation_planner_department'] = array(
    'form' => array(
      'short_name' => array(
        'label' => t('Department Short Name'),
        'description' => t('Department Short Name'),
        'weight' => -5,
      ),
      'long_name' => array(
        'label' => t('Department Long Name'),
        'description' => t('Department Long Name'),
        'weight' => -4,
      ),
      'description' => array(
        'label' => t('Description'),
        'description' => t('Description'),
        'weight' => -3,
      ),
    ),
    'display' => array(
      'short_name' => array(
        'label' => t('Department Short Name'),
        'description' => t('Department Short Name'),
        'weight' => -5,
      ),
      'long_name' => array(
        'label' => t('Department Long Name'),
        'description' => t('Department Long Name'),
        'weight' => -4,
      ),
      'description' => array(
        'label' => t('Description'),
        'description' => t('Description'),
        'weight' => -3,
      ),
    ),
  );

  return $extra;
}

function graduation_planner_department_access($permission, $entity = null) {
  // Access permissions.

  global $user;
  $access = false;
  switch ($permission) {
    case 'delete any department':
      $access = user_access('delete any department');
      break;
    case 'delete own department':
      $access = graduation_planner_department_access('delete any department', $entity) || graduation_planner_department_has_role($entity, $user, 'administrator');
      break;
    case 'edit any department':
      $access = user_access('edit any department');
      break;
    case 'edit own department':
      $access = graduation_planner_department_access('edit any department', $entity) || graduation_planner_department_has_role($entity, $user, 'administrator');
      break;
    case 'join department as student':
      $access = user_access('join department as student') && !graduation_planner_department_has_role($entity, $user, 'student');
      break;
    case 'edit staff':
      $access = user_access('edit any department') || graduation_planner_department_has_role($entity, $user, 'administrator');
      break;
    case 'view students':
      $access = user_access('edit any department') || graduation_planner_department_has_role($entity, $user, array('administrator', 'staff', 'faculty', 'advisor'));
      break;
    case 'member of department':
      $access = graduation_planner_department_is_member($entity, $user);
      break;
  }
  return $access;
}

function graduation_planner_department_view($department, $view_mode = 'full') {
  $department->content = array();
  $department->content = entity_get_controller($department->type)->buildContent($department, $view_mode);
// Build fields content - this where the FieldAPI really comes in to play. The task
// is relatively trivial for us - it all gets taken care of by Drupal core.
  //field_attach_prepare_view('graduation_planner_class', array($class->class_id => $class), $view_mode);
  //entity_prepare_view('graduation_planner_class', array($class->class_id => $class));
  $department->content += field_attach_view('graduation_planner_department', $department, $view_mode);

  $department->content += array(
    '#theme' => 'graduation_planner_department__' . $view_mode,
    '#content' => $department->content,
    '#view_mode' => $view_mode,
    '#language' => NULL,
  );

  return $department->content;
}

function graduation_planner_department_permission() {
  return array(
    // 'View any department' permission(advisor).
    'view any department' => array(
      'title' => t('View Any Department'),
      'description' => t('View any department.')
    ),
    // 'View own department' permission(student).
    'view own department' => array(
      'title' => t('View Own Department'),
      'description' => t('View a department you are an administrator for.')
    ),
    // 'Create department' permission(advisor).
    'create department' => array(
      'title' => t('Create Department'),
      'description' => t('Create a new department')
    ),
    // 'Edit any department' permission(advisor).
    'edit any department' => array(
      'title' => t('Edit Any Department'),
      'description' => t('Edit any Department.')
    ),
    //  'Edit own department' permission(advisor).
    'edit own department' => array(
      'title' => t('Edit Own Department'),
      'description' => t('Edit a department you are an administrator for.')
    ),
    //  'Delete any department' permission(advisor).
    'delete any department' => array(
      'title' => t('Delete Any Department'),
      'description' => t('Delete any Department.')
    ),
    //  'Delete own department' permissio(advisor).
    'delete own department' => array(
      'title' => t('Delete Own Department'),
      'description' => t('Delete a department you are an administator for.')
    )
  );
}

function graduation_planner_department_load($department_id, $reset = FALSE) {
  $department_ids = (isset($department_id) ? array($department_id) : array());
  $department = graduation_planner_department_load_multiple($department_ids, array(), $reset);
  return $department ? reset($department) : FALSE;
}

function graduation_planner_department_load_multiple($department_ids = array(), $conditions = array(), $reset = false) {
  return entity_load('graduation_planner_department', $department_ids, $conditions, $reset);
}

function graduation_planner_department_theme($existing, $type, $theme, $path) {
  return array
    (
    'graduation_planner_department_users_get_staff_form' => array
      (
      'render element' => 'form'
    ),
  );
}

function graduation_planner_department_block_info() {
  return array(
    'department' => array(
      'info' => t('Graduation Planner Department Dashboard Block'),
      'cache' => DRUPAL_CACHE_PER_USER,
    )
  );
}

function graduation_planner_department_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'department':
      if (user_is_logged_in() && !user_is_anonymous()) {
        $block['subject'] = t('My Departments');
        $block['content'] = graduation_planner_department_my_departments();
      }
      break;
  }
  return $block;
}

function graduation_planner_department_class_options($department_id) {
  watchdog('department_id', $department_id);
  $query = db_select('graduation_planner_class', 'gpc');
  $query->fields('gpc', array('class_id'));
  $query->condition('gpc.class_department', $department_id);
  $result = $query->execute();
  $class_ids = $result->fetchAllAssoc('class_id');
  $classes = graduation_planner_class_load_multiple(array_keys($class_ids));
  $options = array();
  foreach ($classes as $class) {
    $options[$class->class_id] = graduation_planner_class_title($class);
  }
  return $options;
}

function graduation_planner_department_exporter_definition() {
  $info = entity_get_info('graduation_planner_department');
  return array('graduation_planner_department' => $info);
}

function graduation_planner_department_importer_definition() {
  return array(
    'graduation_planner_department' => array(
      'import callback' => 'graduation_planner_department_import'
    ),
  );
}

function graduation_planner_department_import($entities, $revisions) {
  watchdog('graduation_planner_department_import', print_r($entities, TRUE));
  $query = db_select('graduation_planner_department', 't');
  $query->fields('t', array('department_id'));
  $results = $query->execute();
  $department_ids = $results->fetchAllAssoc('department_id');

  entity_delete_multiple('graduation_planner_department', array_keys($department_ids));

  if (isset($revisions)) {
    foreach ($revisions as $revision) {
      //watchdog('graduation_planner_department', print_r($revision, TRUE));
     
      $original = entity_load('graduation_planner_department', array($revision->department_id));
      
      if(empty($original))
      {
        $revision->is_new = TRUE;
        entity_save('graduation_planner_department', $revision);
        
      } else {
        $revision->is_new_revision = TRUE;
        entity_save('graduation_planner_department', $revision);
      }
      
    }
  }
  
}
